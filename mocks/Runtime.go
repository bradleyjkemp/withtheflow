package mocks

import mock "github.com/stretchr/testify/mock"
import withtheflow "github.com/bradleyjkemp/withtheflow"

// Runtime is an autogenerated mock type for the Runtime type
type Runtime struct {
	mock.Mock
}

// AddFlow provides a mock function with given fields: funcname, args, dependentFlows
func (_m *Runtime) AddFlow(funcname string, args interface{}, dependentFlows ...withtheflow.FlowId) withtheflow.FlowId {
	_va := make([]interface{}, len(dependentFlows))
	for _i := range dependentFlows {
		_va[_i] = dependentFlows[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, funcname, args)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 withtheflow.FlowId
	if rf, ok := ret.Get(0).(func(string, interface{}, ...withtheflow.FlowId) withtheflow.FlowId); ok {
		r0 = rf(funcname, args, dependentFlows...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(withtheflow.FlowId)
		}
	}

	return r0
}

// DeferredResult provides a mock function with given fields: _a0
func (_m *Runtime) DeferredResult(_a0 withtheflow.FlowId) interface{} {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(withtheflow.FlowId) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}
